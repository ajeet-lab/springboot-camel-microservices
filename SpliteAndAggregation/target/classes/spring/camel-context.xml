<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
						http://camel.apache.org/schema/spring https://camel.apache.org/schema/spring/camel-spring-2.23.3.xsd">
    <bean id="dataSource"
          class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName"
                  value="com.mysql.cj.jdbc.Driver" />
        <property name="url"
                  value="jdbc:mysql://localhost:3306/tata_capital" />
        <property name="username" value="root" />
        <property name="password" value="root" />
    </bean>
    <bean id="sqlComponent"
          class="org.apache.camel.component.sql.SqlComponent">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <bean id="aggrgate" class="com.aggregate.CustomAggregationStrategy" />
    <bean id="utils" class="com.aggregate.Utils" />
    <camelContext id="camel" xmlns="http://camel.apache.org/schema/spring">
        <propertyPlaceholder location="sql.properties" id="sqlprops" />
        <dataFormats>
            <json id="jsonref" library="Jackson" />
        </dataFormats>


        <!-- Payload { "values": [{"products":5},{"quotes":"3"},{"posts":"5"}, {"comments":2}]}  -->
        <route>
            <from uri="jetty:http://0.0.0.0:9000/api/posts?httpMethodRestrict=POST&amp;enableCORS=true" />
            <doTry>
                <removeHeaders pattern="*" />
                <convertBodyTo type="String" />
                <log message="After calling ${body}" />
                <unmarshal>
                    <json library="Jackson"/>
                </unmarshal>
                <log message="After unmarshal ${body}" />
                <split strategyRef="aggrgate" parallelProcessing="true">
                    <simple>${body[values]}</simple>
                    <log message="After split ${body}" />
                    <bean ref="utils" />
                    <log message="After split ${body}" />
                    <setHeader name="CamelHttpMethod">
                        <simple>GET</simple>
                    </setHeader>
                    <doTry>
                        <toD uri="https://dummyjson.com/${header.key}/${header.value}?bridgeEndpoint=true" />
                        <log message="body message is ${body}" />
                        <convertBodyTo type="String" />
                        <doCatch>
                            <exception>java.lang.Exception</exception>
                            <setHeader name="Content-Type">
                                <simple>application/json</simple>
                            </setHeader>
                            <setBody>
                                <simple>{"errorMessage":"${exception.message}"}</simple>
                            </setBody>
                        </doCatch>
                    </doTry>
                </split>
                <convertBodyTo type="String" />
                <log message="Aggregated response: ${body}" />
                <doCatch>
                    <exception>java.lang.Exception</exception>
                    <setHeader name="Content-Type">
                        <simple>application/json</simple>
                    </setHeader>
                    <setBody>
                        <simple>{"errorMessage":"${exception.message}"}</simple>
                    </setBody>
                </doCatch>
            </doTry>
        </route>



        <route>
            <from uri="jetty:http://0.0.0.0:9000/api/loans?httpMethodRestrict=POST&amp;enableCORS=true" />
            <removeHeaders pattern="*" />
            <convertBodyTo type="String" />
            <unmarshal>
                <json library="Jackson"/>
            </unmarshal>
            <split strategyRef="aggrgate" parallelProcessing="true">
                <simple>${body}</simple>
                <doTry>
                    <setBody>
                        <simple>{
                            "loanId": "${body[loanId]}","loanAcccountNo": "${body[loanAcccountNo]}",
                            "fetchAllCharges": "${body[fetchAllCharges]}","tenantId": ${body[tenantId]},
                            "considerLPPComputation": "${body[considerLPPComputation]}"}
                        </simple>
                    </setBody>
                    <setHeader name="Content-Type">
                        <simple>application/json</simple>
                    </setHeader>
                    <setHeader name="CamelHttpMethod">
                        <simple>POST</simple>
                    </setHeader>
                    <toD uri="http://localhost:3000/api/loan/getsingle?bridgeEndpoint=true" />
                    <convertBodyTo type="String" />
                <doCatch>
                    <exception>java.lang.Exception</exception>
                    <setHeader name="Content-Type">
                        <simple>application/json</simple>
                    </setHeader>
                    <setBody>
                        <simple>{"errorMessage":"${exception.message}"}</simple>
                    </setBody>
                </doCatch>
            </doTry>
            </split>
        </route>

    </camelContext>
</beans>